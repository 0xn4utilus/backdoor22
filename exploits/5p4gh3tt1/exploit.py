vec = [0xb7,0x29,0x1af,0x72,0x207,0xfa,0x167,0xd1,0xc1,0x13]

def oil_rev(x):
    return (((((x-9)^0x44)-0x31)^0x4f)-3)

def water_rev(x):
    return (x^0x4d)-0x58

def salt_rev(x):
    return (x-6)//4

def pepper_rev(x):
    return ((x^5)-6)^0x38

# for i in range(10):
#     if i%2==0:
#         print(chr(max([0,water_rev(oil_rev(vec[i]))])) ,chr(max([0,salt_rev(water_rev(vec[i]))])))
#     else:
#         print(chr(max([0,oil_rev(pepper_rev(vec[i])) ] )) ,chr(max([0,oil_rev(salt_rev(vec[i]))])))

part1="flag{m34tb"



# part-2
y=[0x28e00, 0x9925, 0x5a9e, 0x4fb5, 0x85a8, 0xbcec, 0xa56e,0x17b55, 0x4f35, 0x4fb5,0x18c41, 0xbcec,0x2da80, 0x92c0, 0x2a74, 0xae74, 0xa3e0, 0xc11a, 0x8edf,0x1ec25]

quant1,quant2,quant3 = 0,0,0
for i in part1:
    if ord(i)%3==0:
        quant1+=ord(i)
    elif ord(i)%3==1:
        quant2 +=ord(i)
    else:
        quant3 += ord(i)

# print(quant1,quant2,quant3)
def chopping_veggies_rev():
    part2=""
    for i in range(20):
        if i%3==0:
            part2+=chop_veggies_rev(y[i],quant1)
        elif i%3==1:
            part2+=chop_veggies_rev(y[i],quant2)
        else:
            part2+=chop_veggies_rev(y[i],quant3)
    return part2

def chop_veggies_rev(x,quant):
    alpha_numeric = "abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_"
    for ch in alpha_numeric:    
        if ord(ch)%3==0:
            if (ord(ch)*quant)^quant == x: 
                return ch
        elif ord(ch)%3==1:
            if (ord(ch)^quant)*quant == x: 
                return ch
        else:
            if (ord(ch)*quant)^ord(ch) == x: 
                return ch

part2 = chopping_veggies_rev()

# part-3

# "%@!&*/+#.)"
part3 = ''.join(map(chr, [0x7d,0x48,0x34,0x33,0x32,0x30,0x4c,0x42,0x41,0x35] ))[::-1]

flag = part1+part2+part3
print(flag)
